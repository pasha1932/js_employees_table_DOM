{"mappings":"A,S,E,C,C,C,E,C,A,M,G,E,E,M,A,G,C,E,E,M,A,E,I,I,E,E,E,A,M,G,E,E,I,C,C,E,C,C,C,E,C,O,C,CCGA,IAAM,EAAmB,SAAC,CAAA,CAAQ,CAAA,CAAU,CAAA,CAAO,CAAnD,EACE,IAAM,EAAe,SAAS,aAAa,CAAC,OACtC,EAAK,SAAS,aAAa,CAAC,KAElC,CAAA,EAAG,SAAS,CAAG,EACf,EAAG,SAAS,CAAC,GAAG,CAAC,SAEjB,EAAa,SAAS,CAAC,GAAG,CAAC,eAAiB,GAAO,MAAA,CAAL,IAC9C,EAAa,YAAY,CAAC,UAAW,gBACrC,EAAa,WAAW,CAAC,GAIzB,AAFa,SAAS,IAAI,CAErB,qBAAqB,CAAC,aAAc,GACzC,EAAa,KAAK,CAAC,GAAG,CAAG,GAAU,MAAA,CAAP,EAAO,MACnC,EAAa,KAAK,CAAC,KAAK,CAAG,GAAY,MAAA,CAAT,EAAS,MAEvC,WAAW,WACT,EAAa,KAAK,CAAC,OAAO,CAAG,MAC/B,EAAG,IACL,EAGI,EAAoB,GACpB,EAAmB,MA6CvB,AAFc,SAAS,aAAa,CAAC,YAE/B,gBAAgB,CAAC,QAAS,SAAC,CAAjC,EAC2B,OAArB,EAAE,MAAM,CAAC,OAAO,EAClB,AA7CJ,SAAc,CAAM,CAAE,CAAW,EAC/B,IAAM,EAAO,SAAS,gBAAgB,CAAC,YACjC,E,A,S,C,E,G,M,O,C,G,O,E,E,EAAgB,I,A,S,C,E,G,A,a,O,Q,A,M,C,C,O,Q,C,E,A,M,C,C,a,C,O,M,I,C,E,EAAA,I,A,S,C,C,C,E,G,G,G,A,U,O,E,O,E,E,K,G,I,E,O,S,C,Q,C,I,C,G,K,C,E,I,G,W,G,E,W,E,C,E,E,W,C,I,A,E,A,Q,G,A,Q,E,O,M,I,C,G,G,A,c,G,2C,I,C,G,O,E,E,K,G,EAAA,I,A,W,M,A,U,wI,IAEtB,EAAU,IAAI,CAAC,SAAC,CAAA,CAAW,CAA3B,EACE,IAAM,EAAgB,EAAU,KAAK,CAAC,EAAY,CAAC,WAAW,CACxD,EAAgB,EAAU,KAAK,CAAC,EAAY,CAAC,WAAW,CAE9D,OAAQ,GACN,IAAK,OACL,IAAK,WACL,IAAK,SACH,OAAO,EAAc,aAAa,CAAC,E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","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nfunction _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nfunction _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\n// notification\nvar pushNotification = function(posTop, posRight, title, type) {\n    var notification = document.createElement(\"div\");\n    var h2 = document.createElement(\"h2\");\n    h2.innerText = title;\n    h2.classList.add(\"title\");\n    notification.classList.add(\"notification\", \"\".concat(type));\n    notification.setAttribute(\"data-qa\", \"notification\");\n    notification.appendChild(h2);\n    var page = document.body;\n    page.insertAdjacentElement(\"afterbegin\", notification);\n    notification.style.top = \"\".concat(posTop, \"px\");\n    notification.style.right = \"\".concat(posRight, \"px\");\n    setTimeout(function() {\n        notification.style.display = \"none\";\n    }, 2000);\n};\n// sorting\nvar currentSortColumn = -1;\nvar currentSortOrder = \"ASC\";\nfunction sort(sortBy, columnIndex) {\n    var list = document.querySelectorAll(\"tbody tr\");\n    var arrOfList = _to_consumable_array(list);\n    arrOfList.sort(function(employee1, employee2) {\n        var employee1Text = employee1.cells[columnIndex].textContent;\n        var employee2Text = employee2.cells[columnIndex].textContent;\n        switch(sortBy){\n            case \"Name\":\n            case \"Position\":\n            case \"Office\":\n                return employee1Text.localeCompare(employee2Text);\n            case \"Age\":\n                return +employee1Text - +employee2Text;\n            case \"Salary\":\n                return +employee1Text.replaceAll(/[$,]/g, \"\") - +employee2Text.replaceAll(/[$,]/g, \"\");\n        }\n    });\n    if (currentSortColumn === columnIndex) currentSortOrder = currentSortOrder === \"ASC\" ? \"DESC\" : \"ASC\";\n    else {\n        currentSortOrder = \"ASC\";\n        currentSortColumn = columnIndex;\n    }\n    if (currentSortOrder === \"DESC\") arrOfList.reverse();\n    for(var i = 0; i < list.length; i++)list[i].outerHTML = arrOfList[i].outerHTML;\n}\nvar thead = document.querySelector(\"thead tr\");\nthead.addEventListener(\"click\", function(e) {\n    if (e.target.tagName === \"TH\") sort(e.target.textContent, e.target.cellIndex);\n});\n// selected row\nvar tbody = document.querySelector(\"tbody\");\ntbody.addEventListener(\"click\", function(e) {\n    if (e.target.tagName === \"TD\") {\n        if (tbody.querySelector(\".active\")) tbody.querySelector(\".active\").classList.remove(\"active\");\n        e.target.closest(\"tr\").classList.add(\"active\");\n    }\n});\n// fill form\nvar table = document.querySelector(\"table\");\nvar form = document.createElement(\"form\");\nform.classList.add(\"new-employee-form\");\nvar theaders = [\n    \"Name\",\n    \"Position\",\n    \"Office\",\n    \"Age\",\n    \"Salary\"\n];\ntheaders.map(function(theader) {\n    var label = document.createElement(\"label\");\n    var input = document.createElement(\"input\");\n    label.innerText = \"\".concat(theader, \": \");\n    if (theader === \"Office\") {\n        var selectInput = document.createElement(\"select\");\n        selectInput.setAttribute(\"name\", \"\".concat(theader.toLowerCase()));\n        selectInput.setAttribute(\"data-qa\", \"\".concat(theader.toLowerCase()));\n        selectInput.setAttribute(\"required\", \"\");\n        label.insertAdjacentElement(\"beforeend\", selectInput);\n    } else {\n        input.setAttribute(\"name\", \"\".concat(theader.toLowerCase()));\n        input.setAttribute(\"data-qa\", \"\".concat(theader.toLowerCase()));\n        input.setAttribute(\"type\", \"text\");\n        input.setAttribute(\"required\", \"\");\n        label.insertAdjacentElement(\"beforeend\", input);\n    }\n    form.append(label);\n});\n// remove required at input `position` becouse of tests\nform.elements.position.removeAttribute(\"required\");\ntable.after(form);\ndocument.querySelector(\"form\").age.setAttribute(\"type\", \"number\");\ndocument.querySelector(\"form\").salary.setAttribute(\"type\", \"number\");\n// fill select\nvar select = document.querySelector(\"select\");\nvar offices = [\n    \"Tokyo\",\n    \"Singapore\",\n    \"London\",\n    \"New York\",\n    \"Edinburgh\",\n    \"San Francisco\"\n];\noffices.forEach(function(office, key) {\n    select.options[key] = new Option(office, select.options.length);\n});\n// button\nvar button = document.createElement(\"button\");\nbutton.innerText = \"Save to table\";\nbutton.setAttribute(\"type\", \"submit\");\nform.append(button);\n// onsubmit form\nform.addEventListener(\"submit\", function(e) {\n    e.preventDefault();\n    var data = new FormData(form);\n    // valid data\n    if (data.get(\"name\").length < 4) {\n        pushNotification(10, 10, \"Name should have at least 4 characters\", \"error\");\n        return;\n    }\n    if (data.get(\"position\").trim().length === 0) {\n        pushNotification(10, 10, \"Position should have characters\", \"error\");\n        return;\n    }\n    if (+data.get(\"age\") < 18 || +data.get(\"age\") > 90) {\n        pushNotification(10, 10, \"Age should have value between 18 and 90\", \"error\");\n        return;\n    }\n    if (+data.get(\"salary\") < 0) {\n        pushNotification(10, 10, \"Salary should be positive\", \"error\");\n        return;\n    }\n    // fill table\n    var row = document.createElement(\"tr\");\n    var salary = +form.elements.salary.value;\n    row.insertAdjacentHTML(\"afterbegin\", \"<td>\".concat(data.get(\"name\"), \"</td>\\n    <td>\").concat(data.get(\"position\"), \"</td>\\n    <td>\").concat(select.options[data.get(\"office\")].text, \"</td>\\n    <td>\").concat(data.get(\"age\"), \"</td>\\n    <td>$\").concat(salary.toLocaleString(\"en-US\"), \"</td>\"));\n    tbody.append(row);\n    form.reset();\n    pushNotification(10, 10, \"New employee succesfully added to table\", \"success\");\n});\n// dblclick on cell\ntbody.addEventListener(\"dblclick\", function(e) {\n    var newInput = document.createElement(\"input\");\n    var td = e.target.closest(\"td\");\n    if (!td) return false;\n    if (td.cellIndex >= 3) newInput.setAttribute(\"type\", \"number\");\n    var oldText = td.textContent;\n    newInput.classList.add(\"cell-input\");\n    newInput.value = td.textContent;\n    td.textContent = \"\";\n    td.append(newInput);\n    newInput.focus();\n    newInput.addEventListener(\"blur\", function() {\n        if (td.cellIndex === 4) {\n            newInput.setAttribute(\"type\", \"text\");\n            var money = +newInput.value;\n            newInput.value = \"$\" + money.toLocaleString(\"en-US\");\n        }\n        td.textContent = newInput.value;\n        newInput.remove();\n        if (td.textContent === \"\" || td.textContent === \"$0\") td.textContent = oldText;\n    });\n    newInput.addEventListener(\"keypress\", function(ev) {\n        if (ev.code === \"Enter\") {\n            if (td.cellIndex === 4) {\n                newInput.setAttribute(\"type\", \"text\");\n                var money = +newInput.value;\n                newInput.value = \"$\" + money.toLocaleString(\"en-US\");\n            }\n            td.textContent = newInput.value;\n            newInput.remove();\n            if (td.textContent === \"\") td.textContent = oldText;\n        }\n    });\n});\n\n//# sourceMappingURL=index.4852a238.js.map\n","'use strict';\n\n// notification\nconst pushNotification = (posTop, posRight, title, type) => {\n  const notification = document.createElement('div');\n  const h2 = document.createElement('h2');\n\n  h2.innerText = title;\n  h2.classList.add('title');\n\n  notification.classList.add('notification', `${type}`);\n  notification.setAttribute('data-qa', 'notification');\n  notification.appendChild(h2);\n\n  const page = document.body;\n\n  page.insertAdjacentElement('afterbegin', notification);\n  notification.style.top = `${posTop}px`;\n  notification.style.right = `${posRight}px`;\n\n  setTimeout(() => {\n    notification.style.display = 'none';\n  }, 2000);\n};\n\n// sorting\nlet currentSortColumn = -1;\nlet currentSortOrder = 'ASC';\n\nfunction sort(sortBy, columnIndex) {\n  const list = document.querySelectorAll('tbody tr');\n  const arrOfList = [...list];\n\n  arrOfList.sort((employee1, employee2) => {\n    const employee1Text = employee1.cells[columnIndex].textContent;\n    const employee2Text = employee2.cells[columnIndex].textContent;\n\n    switch (sortBy) {\n      case 'Name':\n      case 'Position':\n      case 'Office':\n        return employee1Text.localeCompare(employee2Text);\n\n      case 'Age':\n        return +employee1Text - +employee2Text;\n\n      case 'Salary':\n        return (\n          +employee1Text.replaceAll(/[$,]/g, '') -\n          +employee2Text.replaceAll(/[$,]/g, '')\n        );\n    }\n  });\n\n  if (currentSortColumn === columnIndex) {\n    currentSortOrder = currentSortOrder === 'ASC' ? 'DESC' : 'ASC';\n  } else {\n    currentSortOrder = 'ASC';\n    currentSortColumn = columnIndex;\n  }\n\n  if (currentSortOrder === 'DESC') {\n    arrOfList.reverse();\n  }\n\n  for (let i = 0; i < list.length; i++) {\n    list[i].outerHTML = arrOfList[i].outerHTML;\n  }\n}\n\nconst thead = document.querySelector('thead tr');\n\nthead.addEventListener('click', (e) => {\n  if (e.target.tagName === 'TH') {\n    sort(e.target.textContent, e.target.cellIndex);\n  }\n});\n\n// selected row\nconst tbody = document.querySelector('tbody');\n\ntbody.addEventListener('click', (e) => {\n  if (e.target.tagName === 'TD') {\n    if (tbody.querySelector('.active')) {\n      tbody.querySelector('.active').classList.remove('active');\n    }\n    e.target.closest('tr').classList.add('active');\n  }\n});\n\n// fill form\nconst table = document.querySelector('table');\nconst form = document.createElement('form');\n\nform.classList.add('new-employee-form');\n\nconst theaders = ['Name', 'Position', 'Office', 'Age', 'Salary'];\n\ntheaders.map((theader) => {\n  const label = document.createElement('label');\n  const input = document.createElement('input');\n\n  label.innerText = `${theader}: `;\n\n  if (theader === 'Office') {\n    const selectInput = document.createElement('select');\n\n    selectInput.setAttribute('name', `${theader.toLowerCase()}`);\n    selectInput.setAttribute('data-qa', `${theader.toLowerCase()}`);\n    selectInput.setAttribute('required', '');\n    label.insertAdjacentElement('beforeend', selectInput);\n  } else {\n    input.setAttribute('name', `${theader.toLowerCase()}`);\n    input.setAttribute('data-qa', `${theader.toLowerCase()}`);\n    input.setAttribute('type', 'text');\n    input.setAttribute('required', '');\n    label.insertAdjacentElement('beforeend', input);\n  }\n  form.append(label);\n});\n// remove required at input `position` becouse of tests\nform.elements.position.removeAttribute('required');\ntable.after(form);\n\ndocument.querySelector('form').age.setAttribute('type', 'number');\ndocument.querySelector('form').salary.setAttribute('type', 'number');\n\n// fill select\nconst select = document.querySelector('select');\nconst offices = [\n  'Tokyo',\n  'Singapore',\n  'London',\n  'New York',\n  'Edinburgh',\n  'San Francisco',\n];\n\noffices.forEach((office, key) => {\n  select.options[key] = new Option(office, select.options.length);\n});\n\n// button\nconst button = document.createElement('button');\n\nbutton.innerText = 'Save to table';\nbutton.setAttribute('type', 'submit');\nform.append(button);\n\n// onsubmit form\nform.addEventListener('submit', (e) => {\n  e.preventDefault();\n\n  const data = new FormData(form);\n\n  // valid data\n  if (data.get('name').length < 4) {\n    pushNotification(10, 10, 'Name should have at least 4 characters', 'error');\n\n    return;\n  }\n\n  if (data.get('position').trim().length === 0) {\n    pushNotification(10, 10, 'Position should have characters', 'error');\n\n    return;\n  }\n\n  if (+data.get('age') < 18 || +data.get('age') > 90) {\n    pushNotification(\n      10,\n      10,\n      'Age should have value between 18 and 90',\n      'error',\n    );\n\n    return;\n  }\n\n  if (+data.get('salary') < 0) {\n    pushNotification(10, 10, 'Salary should be positive', 'error');\n\n    return;\n  }\n\n  // fill table\n  const row = document.createElement('tr');\n  const salary = +form.elements.salary.value;\n\n  row.insertAdjacentHTML(\n    'afterbegin',\n    `<td>${data.get('name')}</td>\n    <td>${data.get('position')}</td>\n    <td>${select.options[data.get('office')].text}</td>\n    <td>${data.get('age')}</td>\n    <td>$${salary.toLocaleString('en-US')}</td>`,\n  );\n\n  tbody.append(row);\n\n  form.reset();\n\n  pushNotification(\n    10,\n    10,\n    'New employee succesfully added to table',\n    'success',\n  );\n});\n\n// dblclick on cell\n\ntbody.addEventListener('dblclick', (e) => {\n  const newInput = document.createElement('input');\n  const td = e.target.closest('td');\n\n  if (!td) {\n    return false;\n  }\n\n  if (td.cellIndex >= 3) {\n    newInput.setAttribute('type', 'number');\n  }\n\n  const oldText = td.textContent;\n\n  newInput.classList.add('cell-input');\n  newInput.value = td.textContent;\n  td.textContent = '';\n  td.append(newInput);\n  newInput.focus();\n\n  newInput.addEventListener('blur', () => {\n    if (td.cellIndex === 4) {\n      newInput.setAttribute('type', 'text');\n\n      const money = +newInput.value;\n\n      newInput.value = '$' + money.toLocaleString('en-US');\n    }\n\n    td.textContent = newInput.value;\n    newInput.remove();\n\n    if (td.textContent === '' || td.textContent === '$0') {\n      td.textContent = oldText;\n    }\n  });\n\n  newInput.addEventListener('keypress', (ev) => {\n    if (ev.code === 'Enter') {\n      if (td.cellIndex === 4) {\n        newInput.setAttribute('type', 'text');\n\n        const money = +newInput.value;\n\n        newInput.value = '$' + money.toLocaleString('en-US');\n      }\n\n      td.textContent = newInput.value;\n      newInput.remove();\n\n      if (td.textContent === '') {\n        td.textContent = oldText;\n      }\n    }\n  });\n});\n"],"names":["_array_like_to_array","arr","len","length","i","arr2","Array","pushNotification","posTop","posRight","title","type","notification","document","createElement","h2","innerText","classList","add","concat","setAttribute","appendChild","page","body","insertAdjacentElement","style","top","right","setTimeout","display","currentSortColumn","currentSortOrder","thead","querySelector","addEventListener","e","target","tagName","sort","sortBy","columnIndex","list","querySelectorAll","arrOfList","_array_without_holes","isArray","_iterable_to_array","iter","Symbol","iterator","from","_unsupported_iterable_to_array","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","test","_non_iterable_spread","TypeError","employee1","employee2","employee1Text","cells","textContent","employee2Text","localeCompare","replaceAll","reverse","outerHTML","cellIndex","tbody","remove","closest","table","form","theaders","map","theader","label","input","selectInput","toLowerCase","append","elements","position","removeAttribute","after","age","salary","select","offices","forEach","office","key","options","Option","button","preventDefault","data","FormData","get","trim","row","value","insertAdjacentHTML","text","toLocaleString","reset","newInput","td","oldText","focus","money","ev","code"],"version":3,"file":"index.4852a238.js.map"}